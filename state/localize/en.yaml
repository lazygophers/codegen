cli:
    flags:
        debug: Output detailed log
    gen:
        add-rpc:
            flags:
                action: Behaviors that need to be added in batches, please find the usage documentation for details
                default-role: The default role of the batch-generated interface. Please refer to the usage documentation for details.
                gen-to: Specify the output location of the generated .go files
                list-option: The list can also be filtered, please find the usage documentation for details.
                model: Specify the model name, support omitting the `model` prefix
            long: Generate interfaces in batches and add an interface for a certain model in the .proto file
            short: Batch generation interface
        all:
            long: Generate all code supported by this tool
            short: Generate all code
        cache:
            long: Generate cache files for business call caching related SDKs
            short: Generate cache file
        cmd:
            long: Generate entry files for business services
            short: Generate entry file
        conf:
            long: Generate configuration files for configuration reading of business services
            short: Generate configuration file
        dockerignore:
            long: Generate .dockerignore file for Docker image building to ignore file management
            short: Generate .dockerignore file
        editorconfig:
            long: Generate .editorconfig file for editor configuration
            short: Generate .editorconfig file
        flags:
            add-proto-files: If you need to import other .proto files/folder paths that are not in the same folder as the specified .proto file, this operation will append (not overwrite) the path configured in the configuration file.
            go-module-prefix: For the path of go_package configured in the .proto file and the actual one, you can configure this option
            input: Specify the .proto source file to be generated
            output-path: This option can be configured when the path of go_package configured in the .proto file is inconsistent with the roadbed that actually needs to be generated.
            overwrite: For content that will not be regenerated, force overwriting of existing content
            proto-files: To import other .proto files/folder paths that are not in the same folder as the specified .proto file, this operation is an option to override the configuration field in the configuration file.
            protoc: '`protoc` customizable file path'
            protoc-gen-go: '`protoc-gen-go` plugin path'
            tables-enable_field_created_at: Whether to enable the default configuration generation of the database created_at field
            tables-enable_field_deleted_at: Whether to enable the default setting of the deleted_at field in the database
            tables-enable_field_id: Enable default configuration generation for database-related fields
            tables-enable_field_updated_at: Whether to enable the default value of the updated_at field in the database
            tables-enable_gorm_tag_column: Whether to enable database-related gorm generation
        gitignote:
            long: Generate .gitignore files for ignored file management in version control
            short: Generate .gitignore file
        golang-lint:
            long: Generate .golangci.yml file for code quality inspection
            short: Generate .golangci.yml file
        goreleaser:
            long: Generate .goreleaser.yml file for configuration of release tools
            short: Generate .goreleaser.yml file
        impl:
            long: Generate implementation files for the implementation of business services
            short: Generate implementation files
        long: Code generator, supports multiple templates
        makefile:
            long: Generate Makefile files for building tools and other related commands
            short: Generate Makefile
        mod:
            long: Generate go.mod file for dependency management
            short: Generate go.mod file
        pb:
            long: Generate .pb.go files for generating .proto files,
            short: Generate .pb.go file
        short: Code generator
        state:
            long: Generate all related functions of state for stateful resource or static resource management of business services
            short: All relevant functions for generating state
        table:
            long: All related functions of generating tables for stateful resource or static resource management of business services
            short: All related functions for generating tables
    help:
        additional_commands: Additional commands
        aliases: command alias
        available_commands: Supported commands
        command: Order
        flags: parameter
        get_info: to get more detailed information
        global_flags: global parameters
        use: use
    i18n:
        long: Multilingual internationalization related toolkit
        short: Multilingual internationalization related toolkit
        tran:
            flags:
                all-language: Translate all supported languages ​​(if true the languages ​​flag is disabled)
                force: Overwrite existing translations
                force-key-prefix: keys that need to be forced to be overwritten
                generate-const: Generate enumeration values ​​for easy calling
                languages: Specify the target language for translation
                src-file: Source file to be translated (required)
                src-language: The language of the source file (if not specified, the tool will automatically determine the source file)
                translater:
                    google-free: Google Web Translate
                    usage: 'Translation channel: Support type {{range $key,$value := .Type}}{{$key}}:{{$value}}{{end}}'
            long: Multilingual files from a certain source are converted into files in the same format in other languages.
            short: translate
    long: A tool set for lazy people, including 'proto'-based backend framework, commonly used templates, and multi-language translation
    short: A tool set for lazy people
