cli:
    flags:
        debug: გამომავალი დეტალური ჟურნალი
    gen:
        add-rpc:
            flags:
                action: ქცევები, რომლებიც უნდა დაემატოს ჯგუფურად, გთხოვთ, მოიძიოთ გამოყენების დოკუმენტაცია დეტალებისთვის
                default-role: ნაგულისხმევი როლი სერიის გენერირებული ინტერფეისი გთხოვთ, იხილეთ გამოყენების დოკუმენტაცია დეტალებისთვის.
                gen-to: მიუთითეთ გენერირებული .go ფაილების გამომავალი მდებარეობა
                list-option: სიის გაფილტვრაც შესაძლებელია, დეტალებისთვის გთხოვთ მოძებნოთ გამოყენების დოკუმენტაცია.
                model: მიუთითეთ მოდელის სახელი, მხარი დაუჭირეთ `model` პრეფიქსის გამოტოვებას
            long: შექმენით ინტერფეისები ჯგუფურად და დაამატეთ ინტერფეისი გარკვეული მოდელისთვის .proto ფაილში
            short: სურათების გენერირების ინტერფეისი
        all:
            long: შექმენით ამ ხელსაწყოს მიერ მხარდაჭერილი ყველა კოდი
            short: შექმენით ყველა კოდი
        cache:
            long: შექმენით ქეში ფაილები საქმიანი ზარების ქეშირებასთან დაკავშირებული SDK-ებისთვის
            short: ქეში ფაილის გენერირება
        cmd:
            long: შექმენით შესვლის ფაილები ბიზნეს სერვისებისთვის
            short: შეყვანის ფაილის გენერირება
        conf:
            long: შექმენით კონფიგურაციის ფაილები ბიზნეს სერვისების კონფიგურაციის წასაკითხად
            short: კონფიგურაციის ფაილის გენერირება
        dockerignore:
            long: შექმენით .dockerignore ფაილი Docker image Building-ისთვის, რათა იგნორირება გაუკეთოთ ფაილების მართვას
            short: შექმენით .dockerignore ფაილი
        editorconfig:
            long: შექმენით .editorconfig ფაილი რედაქტორის კონფიგურაციისთვის
            short: შექმენით .editorconfig ფაილი
        flags:
            add-proto-files: თუ გჭირდებათ სხვა .proto ფაილების/საქაღალდის ბილიკების იმპორტი, რომლებიც არ არის იმავე საქაღალდეში, როგორც მითითებული .proto ფაილი, ეს ოპერაცია დაამატებს (არ გადაწერს) კონფიგურაციის ფაილში კონფიგურირებულ გზას.
            go-module-prefix: .proto ფაილში კონფიგურირებული go_package-ის გზისთვის და რეალურისთვის შეგიძლიათ დააკონფიგურიროთ ეს პარამეტრი
            input: მიუთითეთ გენერირებული .proto წყაროს ფაილი
            output-path: ამ პარამეტრის კონფიგურაცია შესაძლებელია, როდესაც .proto ფაილში კონფიგურირებული go_package-ის ბილიკი შეუსაბამოა გზის საძირკველთან, რომელიც რეალურად უნდა გენერირდეს.
            overwrite: კონტენტისთვის, რომელიც არ იქნება რეგენერირებული, აიძულეთ არსებული კონტენტის გადაწერა
            proto-files: სხვა .proto ფაილების/საქაღალდის ბილიკების იმპორტისთვის, რომლებიც არ არის იმავე საქაღალდეში, როგორც მითითებული .proto ფაილი, ეს ოპერაცია არის კონფიგურაციის ფაილში კონფიგურაციის ველის გადაფარვის ვარიანტი.
            protoc: '`protoc` კონფიგურირებადი ფაილის გზა'
            protoc-gen-go: '`protoc-gen-go` მოდულის გზა'
            tables-enable_field_created_at: ჩართოთ თუ არა მონაცემთა ბაზის შექმნის ველის ნაგულისხმევი კონფიგურაციის გენერაცია
            tables-enable_field_deleted_at: ჩართოთ თუ არა მონაცემთა ბაზაში deleted_at ველის ნაგულისხმევი პარამეტრი
            tables-enable_field_id: ჩართეთ ნაგულისხმევი კონფიგურაციის გენერაცია მონაცემთა ბაზასთან დაკავშირებული ველებისთვის
            tables-enable_field_updated_at: ჩართოთ თუ არა მონაცემთა ბაზაში updated_at ველის ნაგულისხმევი მნიშვნელობა
            tables-enable_gorm_tag_column: ჩართოთ თუ არა მონაცემთა ბაზასთან დაკავშირებული გორმის გენერაცია
        gitignote:
            long: შექმენით .gitignore ფაილები იგნორირებული ფაილების მართვისთვის ვერსიის კონტროლში
            short: შექმენით .gitignore ფაილი
        golang-lint:
            long: შექმენით .golangci.yml ფაილი კოდის ხარისხის შესამოწმებლად
            short: შექმენით .golangci.yml ფაილი
        goreleaser:
            long: შექმენით .goreleaser.yml ფაილი გამოშვების ხელსაწყოების კონფიგურაციისთვის
            short: შექმენით .goreleaser.yml ფაილი
        i18n:
            long: შექმენით i18n ფაილები მრავალენოვანი ინტერნაციონალიზაციასთან დაკავშირებული ხელსაწყოების ინიციალიზაციისთვის და სხვა ფუნქციებისთვის
            short: შექმენით i18n ფაილი
        impl:
            long: ბიზნეს სერვისების განხორციელებისთვის განხორციელების ფაილების გენერირება
            short: განხორციელების ფაილების გენერირება
        long: კოდის გენერატორი, მხარს უჭერს მრავალ შაბლონს
        makefile:
            long: შექმენით Makefile ფაილები სამშენებლო ხელსაწყოებისა და სხვა დაკავშირებული ბრძანებებისთვის
            short: შექმენით Makefile
        mod:
            long: შექმენით go.mod ფაილი დამოკიდებულების მართვისთვის
            short: შექმენით go.mod ფაილი
        pb:
            long: შექმენით .pb.go ფაილები .proto ფაილების გენერირებისთვის,
            short: შექმენით .pb.go ფაილი
        short: Კოდების გენერატორი
        state:
            flags:
                cache: ჩართოთ თუ არა ქეშთან დაკავშირებული გენერაცია
                config: კონფიგურაციასთან დაკავშირებული კოდის გენერირება თუ არა
                db: ჩართოთ თუ არა მონაცემთა ბაზასთან დაკავშირებული მონაცემთა ბაზის გენერირება
                i18n: ჩართოთ თუ არა მრავალენოვანი დაკავშირებული გენერაცია (გენერაცია მოიცავს მხოლოდ მდგომარეობის ინიციალიზაციას და სხვა კონტენტს და არ შეიცავს რამდენიმე ენის ავტომატურ თარგმნას. თუ გჭირდებათ ავტომატური თარგმანი, გთხოვთ გამოიყენოთ {{.Command}} დეტალების სანახავად)
                table: ჩართოთ თუ არა მონაცემთა ბაზასთან დაკავშირებული მონაცემთა ბაზის გენერირება
            long: სახელმწიფოს ყველა დაკავშირებული ფუნქციის გენერირება სახელმწიფო რესურსების ან ბიზნეს სერვისების სტატიკური რესურსების მართვისთვის
            short: სახელმწიფოს წარმოქმნის ყველა შესაბამისი ფუნქცია
            table:
                long: შექმენით state.table დაკავშირებული კოდი, რომელიც გამოიყენება მონაცემთა ბაზის დასაკავშირებლად და ცხრილის ინიციალიზაციისთვის, როდესაც სერვისი დაიწყება.
                short: state.table დაკავშირებული კოდის გენერირება
        table:
            long: ცხრილების გენერირების ყველა დაკავშირებული ფუნქცია ბიზნეს სერვისების სახელმწიფო რესურსების ან სტატიკური რესურსების მართვისთვის
            short: ყველა დაკავშირებული ფუნქცია ცხრილების გენერირებისთვის
    help:
        additional_commands: დამატებითი ბრძანებები
        aliases: ბრძანების მეტსახელი
        available_commands: მხარდაჭერილი ბრძანებები
        command: შეკვეთა
        flags: პარამეტრი
        get_info: უფრო დეტალური ინფორმაციის მისაღებად
        global_flags: გლობალური პარამეტრები
        use: გამოყენება
    i18n:
        long: მრავალენოვანი ინტერნაციონალიზაციასთან დაკავშირებული ინსტრუმენტარიუმი
        short: მრავალენოვანი ინტერნაციონალიზაციასთან დაკავშირებული ინსტრუმენტარიუმი
        tran:
            flags:
                all-language: თარგმნეთ ყველა მხარდაჭერილი ენა (თუ მართალია, ენების დროშა გამორთულია)
                force: არსებული თარგმანების გადაწერა
                force-key-prefix: გასაღებები, რომლებიც იძულებით უნდა გადაიწეროს
                generate-const: შექმენით აღრიცხვის მნიშვნელობები მარტივი გამოძახებისთვის
                languages: მიუთითეთ თარგმანის სამიზნე ენა
                src-file: წყაროს ფაილი უნდა ითარგმნოს (აუცილებელია)
                src-language: საწყისი ფაილის ენა (თუ არ არის მითითებული, ინსტრუმენტი ავტომატურად განსაზღვრავს წყაროს ფაილს)
                translater:
                    google-free: Google Web Translate
                    usage: 'თარგმანის არხი: მხარდაჭერის ტიპი {{range $key,$value := .Type}}{{$key}}:{{$value}}{{end}}'
            long: მრავალენოვანი ფაილები გარკვეული წყაროდან გარდაიქმნება ფაილებად იმავე ფორმატში სხვა ენებზე.
            short: თარგმნა
    long: ხელსაწყოების ნაკრები ზარმაცი ადამიანებისთვის, მათ შორის „პროტო“-ზე დაფუძნებული backend ჩარჩო, ხშირად გამოყენებული შაბლონები და მრავალენოვანი თარგმანი
    short: ხელსაწყოების ნაკრები ზარმაცი ადამიანებისთვის
