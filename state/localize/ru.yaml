cli:
    flags:
        debug: Вывод подробного журнала
    gen:
        add-rpc:
            flags:
                action: Поведения, которые необходимо добавлять пакетно, подробности см. в документации по использованию.
                default-role: Роль пакетно-генерируемого интерфейса по умолчанию. Подробную информацию см. в документации по использованию.
                gen-to: Укажите выходное местоположение сгенерированных файлов .go.
                list-option: Список также можно фильтровать. Подробную информацию можно найти в документации по использованию.
                model: Укажите название модели, можно пропустить префикс «модель».
            long: Генерируйте интерфейсы в пакетном режиме и добавляйте интерфейс для определенной модели в файл .proto.
            short: Интерфейс пакетной генерации
        all:
            long: Сгенерируйте весь код, поддерживаемый этим инструментом.
            short: Генерировать весь код
        cache:
            long: Создание файлов кэша для SDK, связанных с кэшированием бизнес-вызовов.
            short: Создать файл кэша
        cmd:
            long: Создание файлов записей для бизнес-услуг
            short: Создать файл ввода
        conf:
            long: Создать шаблон файла конфигурации
            short: Создать файл конфигурации
        dockerignore:
            long: Создайте файл .dockerignore для создания образа Docker, чтобы игнорировать управление файлами.
            short: Создать файл .dockerignore
        editorconfig:
            long: Создайте файл .editorconfig для конфигурации редактора.
            short: Создать файл .editorconfig
        flags:
            add-proto-files: Если вам нужно импортировать другие пути к файлам/папкам .proto, которые не находятся в той же папке, что и указанный файл .proto, эта операция добавит (не перезапишет) путь, настроенный в файле конфигурации.
            go-module-prefix: Для пути go_package, настроенного в файле .proto, и фактического пути вы можете настроить эту опцию
            input: Укажите исходный файл .proto, который нужно сгенерировать.
            output-path: Эту опцию можно настроить, если путь go_package, настроенный в файле .proto, не соответствует дорожному полотну, которое фактически необходимо создать.
            overwrite: Для контента, который не будет восстановлен, принудительно перезапишите существующий контент.
            proto-files: Чтобы импортировать другие пути к файлам/папкам .proto, которые не находятся в той же папке, что и указанный файл .proto, эта операция позволяет переопределить поле конфигурации в файле конфигурации.
            protoc: '`protoc` настраиваемый путь к файлу'
            protoc-gen-go: Путь к плагину `protoc-gen-go`
            tables-enable_field_created_at: Включить ли генерацию конфигурации по умолчанию для поля Create_at базы данных.
            tables-enable_field_deleted_at: Включить ли настройку по умолчанию для поля delete_at в базе данных
            tables-enable_field_id: Включить создание конфигурации по умолчанию для полей, связанных с базой данных.
            tables-enable_field_updated_at: Включить ли значение по умолчанию поля update_at в базе данных
            tables-enable_gorm_tag_column: Включить ли генерацию гормов, связанных с базой данных
        gitignote:
            long: Создание файлов .gitignore для игнорирования управления файлами в системе контроля версий.
            short: Создать файл .gitignore
        golang-lint:
            long: Создайте файл .golangci.yml для проверки качества кода.
            short: Создать файл .golangci.yml
        goreleaser:
            long: Создайте файл .goreleaser.yml для настройки инструментов выпуска.
            short: Создать файл .goreleaser.yml.
        impl:
            long: Создание файлов реализации для реализации бизнес-сервисов.
            short: Создание файлов реализации
        long: Генератор кода, поддерживает несколько шаблонов
        makefile:
            long: Создание файлов Makefile для создания инструментов и других связанных команд.
            short: Создать Makefile
        mod:
            long: Создайте файл go.mod для управления зависимостями.
            short: Создать файл go.mod
        pb:
            long: Создайте файлы .pb.go, которые используются для создания файлов .proto. Соответствующие метки полей x будут автоматически добавлены в соответствии с конфигурацией.
            short: Создать файл .pb.go
        short: Генератор кода
        state:
            conf:
                long: Создайте код чтения файла конфигурации для чтения конфигурации бизнес-сервиса.
                short: Создать код чтения файла конфигурации
            flags:
                cache: Включить ли генерацию, связанную с кешем
                config: Генерировать ли код, связанный с конфигурацией
                i18n: Включить ли генерацию, связанную с несколькими языками (генерация включает только инициализацию состояния и другой контент и не включает автоматический перевод на несколько языков. Если вам нужен автоматический перевод, используйте {{.Command}} для просмотра подробностей).
                table: Включить ли создание базы данных, связанной с базой данных
            i18n:
                long: Сгенерируйте код, связанный с i18n, для международных звонков на нескольких языках.
                short: Создать код, связанный с i18n
            long: Сгенерируйте все связанные функции состояния для управления ресурсами с отслеживанием состояния или статическим управлением ресурсами бизнес-сервисов.
            short: Все соответствующие функции для генерации состояния
            table:
                long: Создайте код, связанный с state.table, используемый для подключения к базе данных и инициализации таблицы при запуске службы.
                short: Создать код, связанный с state.table
        table:
            long: Все связанные функции создания таблиц для управления ресурсами с отслеживанием состояния или статическим управлением ресурсами бизнес-сервисов.
            short: Все сопутствующие функции для создания таблиц
    help:
        additional_commands: Дополнительные команды
        aliases: псевдоним команды
        available_commands: Поддерживаемые команды
        command: Заказ
        flags: параметр
        get_info: чтобы получить более подробную информацию
        global_flags: глобальные параметры
        use: использовать
    i18n:
        long: Многоязычный инструментарий, связанный с интернационализацией
        short: Многоязычный инструментарий, связанный с интернационализацией
        tran:
            flags:
                all-language: Перевести все поддерживаемые языки (если это правда, флаг языков отключен)
                force: Перезаписать существующие переводы
                force-key-prefix: ключи, которые нужно принудительно перезаписать
                generate-const: Генерация значений перечисления для удобного вызова
                languages: Укажите целевой язык для перевода
                src-file: Исходный файл для перевода (обязательно)
                src-language: Язык исходного файла (если не указан, инструмент автоматически определит исходный файл)
                translater:
                    google-free: Веб-переводчик Google
                    usage: 'Канал перевода: тип поддержки {{range $key,$value := .Type}}{{$key}}:{{$value}}{{end}}'
            long: Многоязычные файлы из определенного источника конвертируются в файлы того же формата на других языках.
            short: переводить
    long: Набор инструментов для ленивых, включая бэкэнд-фреймворк на основе прототипа, часто используемые шаблоны и многоязычный перевод.
    short: Набор инструментов для ленивых
